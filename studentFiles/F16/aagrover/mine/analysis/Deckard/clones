========== 1 ==========
(1) FILE: ../../cclient.c LINES:81:14 TOKENS:435:486 DIST:3.3

case 5 : receivingMessage ( c ) ; break ; case 7 : errorMessage ( c ) ; break ; case 9 : terminateClient ( c ) ; break ; case 11 : receiveNumHandles ( c , a ) ; break ; case 12 : global_d ++ ; printHandles ( c , a ) ; if ( global_d == global_a ) { global_e = 0 ; global_d = 0 ; } 
(2) FILE: ../../server.c LINES:80:15 TOKENS:452:507 DIST:0.0

if ( ! global_h ) { d = * ( ( uint8_t * ) ( e + 2 ) ) ; switch ( d ) { case 1 : initialPacket ( e , a ) ; break ; case 5 : sendMessage ( e , a ) ; break ; case 4 : broadcastMessage ( e , a ) ; break ; case 8 : exitClient ( e , a ) ; break ; case 10 : listAllHandles ( e , a ) ; break ; } } else { if ( global_i == global_c ) { global_i = 0 ; global_h = 0 ; } else { sendHandle ( global_i ) ; } } 
========== 2 ==========
(1) FILE: ../../cclient.c LINES:261:8 TOKENS:1643:1697 DIST:3.5

void handleList ( char * a , int b , int c ) { int d ; char * e ; uint8_t f = 10 ; uint16_t g = 3 ; e = malloc ( g ) ; memcpy ( e , & g , 2 ) ; memcpy ( e + 2 , & f , 1 ) ; d = mySend ( b , e , g , 0 ) ; } 
(2) FILE: ../../cclient.c LINES:271:9 TOKENS:1716:1773 DIST:0.0

void exitClient ( char * a , int b , int c ) { uint16_t d ; char * e ; uint8_t f = 8 ; int g ; d = 3 ; e = malloc ( d ) ; memcpy ( e , & d , 2 ) ; memcpy ( e + 2 , & f , 1 ) ; g = mySend ( b , e , d , 0 ) ; } 
========== 3 ==========
(1) FILE: ../../cclient.c LINES:82:14 TOKENS:438:492 DIST:3.0

case 5 : receivingMessage ( c ) ; break ; case 7 : errorMessage ( c ) ; break ; case 9 : terminateClient ( c ) ; break ; case 11 : receiveNumHandles ( c , a ) ; break ; case 12 : global_d ++ ; printHandles ( c , a ) ; if ( global_d == global_a ) { global_e = 0 ; global_d = 0 ; } 
(2) FILE: ../../server.c LINES:81:15 TOKENS:454:513 DIST:0.0

if ( ! global_h ) { d = * ( ( uint8_t * ) ( e + 2 ) ) ; switch ( d ) { case 1 : initialPacket ( e , a ) ; break ; case 5 : sendMessage ( e , a ) ; break ; case 4 : broadcastMessage ( e , a ) ; break ; case 8 : exitClient ( e , a ) ; break ; case 10 : listAllHandles ( e , a ) ; break ; } } else { if ( global_i == global_c ) { global_i = 0 ; global_h = 0 ; } else { sendHandle ( global_i ) ; } } 
========== 4 ==========
(1) FILE: ../../cclient.c LINES:141:8 TOKENS:780:830 DIST:0.0

void startUp ( int socket_fd ) ; void printPrompt ( void ) ; void initPacket ( char * client_handle , int socket_fd ) ; void promptUser ( int socket_fd ) ; void message ( char * input , int socket_fd , int send_len ) ; void broadcast ( char * input , int socket_fd , int send_len ) ; void handleList ( char * input , int socket_fd , int send_len ) ; void exitClient ( char * input , int socket_fd , int send_len ) ; void transmitCheck ( int socket_fd ) ; void receivingMessage ( char * packet ) ; void errorMessage ( char * packet ) ; void receiveNumHandles ( char * packet , int socket_fd ) ; void printHandles ( char * packet , int socket_fd ) ; void terminateClient ( char * packet ) ; char * global_c ; int global_b = 3 ; int global_e = 0 ; int global_a = 0 ; int global_d = 0 ; unsigned int __bswap_32 ( unsigned int a ) { ; } __uint64_t __bswap_64 ( __uint64_t a ) { ; } int main ( int a , char * b ) { int c = 0 ; if ( a != 4 ) { fprintf ( stderr , "Error - must include IP address, port number, and client handle name\n" ) ; exit ( 1 ) ; } c = tcpClientSetup ( b [ 2 ] , b [ 3 ] ) ; initPacket ( b [ 1 ] , c ) ; startUp ( c ) ; close ( c ) ; return 0 ; } void startUp ( int a ) { ; int c = a ; FD_ZERO ( & b ) ; FD_SET ( a , & b ) ; while ( 1 ) { if ( ! global_e ) { printPrompt ( ) ; } while ( 1 ) { ; } if ( ! global_e ) { if ( FD_ISSET ( 0 , & b ) ) { promptUser ( a ) ; } } break ; } break ; } } } void transmitCheck ( int a ) { uint8_t b ; char * c = ( ( void * ) 0 ) ; int d = - 1 ; struct timeval e ; e . tv_usec = 0 ; e . tv_sec = 1 ; c = malloc ( 1024 ) ; d = myRecv ( a , c , 1024 , 0 ) ; if ( d != - 1 ) { b = * ( c + 2 ) ; switch ( b ) { case 5 : receivingMessage ( c ) ; break ; case 7 : errorMessage ( c ) ; break ; case 9 : terminateClient ( c ) ; break ; case 11 : receiveNumHandles ( c , a ) ; break ; case 12 : global_d ++ ; printHandles ( c , a ) ; if ( global_d == global_a ) { global_e = 0 ; global_d = 0 ; } break ; default : break ; } } } void terminateClient ( char * a ) { printf ( "\n" ) ; exit ( 0 ) ; } void printHandles ( char * a , int b ) { uint16_t c , d = 3 ; uint8_t e ; char * f , * g = malloc ( 3 ) ; uint8_t h ; e = 0 ; c = * ( uint16_t * ) a ; h = * ( ( uint8_t * ) ( a + 3 ) ) ; f = a + 3 + 1 ; printf ( "\t%s\n" , f ) ; memcpy ( g , & d , 2 ) ; memcpy ( g + 2 , & e , 1 ) ; mySend ( b , g , d , 0 ) ; } void receiveNumHandles ( char * a , int b ) { int c = 0 ; uint32_t d ; char * e = malloc ( 3 ) ; uint16_t f = 3 ; global_e = 1 ; d = * ( ( uint32_t * ) ( a + 3 ) ) ; global_a = d ; printf ( "\nNumber of clients: %d\n" , d ) ; memcpy ( e , & f , 2 ) ; memcpy ( e + 2 , & c , 1 ) ; mySend ( b , e , f , 0 ) ; } void receivingMessage ( char * a ) { char * b , * c , * d ; uint16_t e ; uint8_t f ; e = * ( ( uint16_t * ) a ) ; f = * ( a + 3 ) ; c = a + 3 + 1 + f ; b = a + 3 + 1 ; d = malloc ( f ) ; memcpy ( d , b , f ) ; printf ( "\n%s: %s\n" , d , c ) ; free ( d ) ; } void initPacket ( char * a , int b ) { ; if ( FD_ISSET ( b , & d ) ) { global_c = a ; f = myRecv ( b , h , 1024 , 0 ) ; g = * ( uint16_t * ) h ; i = * ( ( uint8_t * ) h + 2 ) ; if ( i == 3 ) { fprintf ( stderr , "Handle already in use: <%s>\n" , a ) ; exit ( 1 ) ; } free ( h ) ; } } 
(2) FILE: ../../cclient.c LINES:222:7 TOKENS:1234:1286 DIST:3.5

uint16_t d = 0 ; char * e = " " , f = 5 ; uint8_t g , h ; int i , j = 0 ; char * k = a , * l , * m , * n ; k = strtok ( k , e ) ; l = strtok ( ( ( void * ) 0 ) , e ) ; g = strlen ( l ) ; h = strlen ( global_c ) ; j = c - 4 - g ; n = malloc ( j + 1 ) ; while ( ( k = strtok ( ( ( void * ) 0 ) , e ) ) != ( ( void * ) 0 ) ) { strcat ( n , k ) ; strcat ( n , " " ) ; } strcat ( n , "\0" ) ; d = 3 + 1 + g + 1 + h + j ; m = malloc ( d ) ; memcpy ( m , & d , 2 ) ; 
========== 5 ==========
(1) FILE: ../../server.c LINES:3:4 TOKENS:18:71 DIST:0.0
void sendMessage(char *packet, int client_socket); /* void sendMessage(char *packet, int client_socket) */

void receiveData ( int client_socket ) ; void initialPacket ( char * packet , int client_socket ) ; void sendMessage ( char * packet , int client_socket ) ; void destinationError ( int client_socket , char * invalid , char * send_to , int send_to_len , char * send_from , int send_from_len ) ; int compareClients ( char * send_to , int send_to_len ) ; void selectCall ( int server_socket ) ; 
(2) FILE: ../../server.c LINES:1:4 TOKENS:0:53 DIST:0.0
void receiveData(int client_socket); /* void receiveData(int client_socket) */
void initialPacket(char *packet, int client_socket); /* void initialPacket(char *packet, int client_socket) */
void sendMessage(char *packet, int client_socket); /* void sendMessage(char *packet, int client_socket) */

void receiveData ( int client_socket ) ; void initialPacket ( char * packet , int client_socket ) ; void sendMessage ( char * packet , int client_socket ) ; void destinationError ( int client_socket , char * invalid , char * send_to , int send_to_len , char * send_from , int send_from_len ) ; 
(3) FILE: ../../cclient.c LINES:5:4 TOKENS:31:86 DIST:2.0

void startUp ( int socket_fd ) ; void printPrompt ( void ) ; void initPacket ( char * client_handle , int socket_fd ) ; void promptUser ( int socket_fd ) ; void message ( char * input , int socket_fd , int send_len ) ; void broadcast ( char * input , int socket_fd , int send_len ) ; void handleList ( char * input , int socket_fd , int send_len ) ; void exitClient ( char * input , int socket_fd , int send_len ) ; 
========== 6 ==========
(1) FILE: ../../cclient.c LINES:229:4 TOKENS:1287:1345 DIST:2.4

uint16_t d = 0 ; char * e = " " , f = 5 ; uint8_t g , h ; int i , j = 0 ; char * k = a , * l , * m , * n ; k = strtok ( k , e ) ; l = strtok ( ( ( void * ) 0 ) , e ) ; g = strlen ( l ) ; h = strlen ( global_c ) ; j = c - 4 - g ; n = malloc ( j + 1 ) ; while ( ( k = strtok ( ( ( void * ) 0 ) , e ) ) != ( ( void * ) 0 ) ) { strcat ( n , k ) ; strcat ( n , " " ) ; } strcat ( n , "\0" ) ; d = 3 + 1 + g + 1 + h + j ; m = malloc ( d ) ; memcpy ( m , & d , 2 ) ; memcpy ( m + 2 , & f , 1 ) ; memcpy ( m + 2 + 1 , & g , 1 ) ; memcpy ( m + 2 + 1 + 1 , l , g ) ; memcpy ( m + 2 + 1 + 1 + g , & h , 1 ) ; 
(2) FILE: ../../server.c LINES:220:4 TOKENS:1416:1473 DIST:0.0

uint16_t c ; uint8_t d , e , f ; int g = - 1 , h , i , j ; char * k , * l , * m , * n ; f = 5 ; d = * ( a + 3 ) ; l = a + 3 + 1 + d + 1 ; k = a + 3 + 1 ; e = * ( a + 3 + 1 + d ) ; m = a + 3 + 1 + d + 1 + e ; j = * ( uint16_t * ) a - 3 - 1 - d - 1 - e ; if ( strlen ( m ) == 0 ) { j = 1 ; m = malloc ( 1 ) ; memcpy ( m , " " , 1 ) ; } n = malloc ( d ) ; memcpy ( n , k , d ) ; g = compareClients ( k , d ) ; c = 3 + 1 + e + j ; a = malloc ( c ) ; memcpy ( a , & c , 2 ) ; memcpy ( a + 2 , & f , 1 ) ; memcpy ( a + 2 + 1 , & e , 1 ) ; memcpy ( a + 2 + 1 + 1 , l , e ) ; memcpy ( a + 2 + 1 + 1 + e , m , j ) ; 
========== 7 ==========
(1) FILE: ../../cclient.c LINES:219:6 TOKENS:1189:1248 DIST:0.0

uint16_t d = 0 ; char * e = " " , f = 5 ; uint8_t g , h ; int i , j = 0 ; char * k = a , * l , * m , * n ; k = strtok ( k , e ) ; l = strtok ( ( ( void * ) 0 ) , e ) ; g = strlen ( l ) ; h = strlen ( global_c ) ; j = c - 4 - g ; n = malloc ( j + 1 ) ; while ( ( k = strtok ( ( ( void * ) 0 ) , e ) ) != ( ( void * ) 0 ) ) { strcat ( n , k ) ; strcat ( n , " " ) ; } 
(2) FILE: ../../cclient.c LINES:244:6 TOKENS:1465:1522 DIST:3.6

uint8_t d , e = 4 ; int f , g , h ; char * i = a , * j , * k , * l ; j = global_c ; i = strtok ( i , " " ) ; d = strlen ( global_c ) ; g = c - 3 ; l = malloc ( g + 1 ) ; while ( ( i = strtok ( ( ( void * ) 0 ) , " " ) ) != ( ( void * ) 0 ) ) { strcat ( l , i ) ; strcat ( l , " " ) ; } 
========== 8 ==========
(1) FILE: ../../cclient.c LINES:242:5 TOKENS:1449:1505 DIST:3.2

uint8_t d , e = 4 ; int f , g , h ; char * i = a , * j , * k , * l ; j = global_c ; i = strtok ( i , " " ) ; d = strlen ( global_c ) ; g = c - 3 ; l = malloc ( g + 1 ) ; while ( ( i = strtok ( ( ( void * ) 0 ) , " " ) ) != ( ( void * ) 0 ) ) { strcat ( l , i ) ; strcat ( l , " " ) ; } 
(2) FILE: ../../cclient.c LINES:217:5 TOKENS:1175:1231 DIST:0.0

uint16_t d = 0 ; char * e = " " , f = 5 ; uint8_t g , h ; int i , j = 0 ; char * k = a , * l , * m , * n ; k = strtok ( k , e ) ; l = strtok ( ( ( void * ) 0 ) , e ) ; g = strlen ( l ) ; h = strlen ( global_c ) ; j = c - 4 - g ; n = malloc ( j + 1 ) ; while ( ( k = strtok ( ( ( void * ) 0 ) , e ) ) != ( ( void * ) 0 ) ) { strcat ( n , k ) ; strcat ( n , " " ) ; } 
========== 9 ==========
(1) FILE: ../../cclient.c LINES:193:12 TOKENS:1039:1089 DIST:2.4

case 'm' : message ( c , a , b ) ; break ; case 'b' : broadcast ( c , a , b ) ; break ; case 'l' : handleList ( c , a , b ) ; break ; case 'e' : exitClient ( c , a , b ) ; break ; default : printf ( "Invalid command\n" ) ; 
(2) FILE: ../../server.c LINES:76:13 TOKENS:434:486 DIST:0.0

switch ( d ) { case 1 : initialPacket ( e , a ) ; break ; case 5 : sendMessage ( e , a ) ; break ; case 4 : broadcastMessage ( e , a ) ; break ; case 8 : exitClient ( e , a ) ; break ; case 10 : listAllHandles ( e , a ) ; break ; } 
(3) FILE: ../../cclient.c LINES:81:14 TOKENS:435:486 DIST:2.8

case 5 : receivingMessage ( c ) ; break ; case 7 : errorMessage ( c ) ; break ; case 9 : terminateClient ( c ) ; break ; case 11 : receiveNumHandles ( c , a ) ; break ; case 12 : global_d ++ ; printHandles ( c , a ) ; if ( global_d == global_a ) { global_e = 0 ; global_d = 0 ; } 
========== 10 ==========
(1) FILE: ../../cclient.c LINES:1:6 TOKENS:0:58 DIST:1.7
void startUp(int socket_fd); /* void startUp(int socket_fd) */
void printPrompt(void); /* void printPrompt(void) */
void initPacket(char *client_handle, int socket_fd); /* void initPacket(char *client_handle, int socket_fd) */
void promptUser(int socket_fd); /* void promptUser(int socket_fd) */
void message(char *input, int socket_fd, int send_len); /* void message(char *input, int socket_fd, int send_len) */

void startUp ( int socket_fd ) ; void printPrompt ( void ) ; void initPacket ( char * client_handle , int socket_fd ) ; void promptUser ( int socket_fd ) ; void message ( char * input , int socket_fd , int send_len ) ; void broadcast ( char * input , int socket_fd , int send_len ) ; 
(2) FILE: ../../server.c LINES:5:6 TOKENS:54:111 DIST:0.0
int compareClients(char *send_to, int send_to_len); /* int compareClients(char *send_to, int send_to_len) */

void receiveData ( int client_socket ) ; void initialPacket ( char * packet , int client_socket ) ; void sendMessage ( char * packet , int client_socket ) ; void destinationError ( int client_socket , char * invalid , char * send_to , int send_to_len , char * send_from , int send_from_len ) ; int compareClients ( char * send_to , int send_to_len ) ; void selectCall ( int server_socket ) ; void broadcastMessage ( char * packet , int client_socket ) ; void listAllHandles ( char * packet , int client_socket ) ; void sendHandle ( int sending_index ) ; void exitClient ( char * packet , int client_socket ) ; 
========== 11 ==========
(1) FILE: ../../cclient.c LINES:227:5 TOKENS:1270:1327 DIST:3.5

uint16_t d = 0 ; char * e = " " , f = 5 ; uint8_t g , h ; int i , j = 0 ; char * k = a , * l , * m , * n ; k = strtok ( k , e ) ; l = strtok ( ( ( void * ) 0 ) , e ) ; g = strlen ( l ) ; h = strlen ( global_c ) ; j = c - 4 - g ; n = malloc ( j + 1 ) ; while ( ( k = strtok ( ( ( void * ) 0 ) , e ) ) != ( ( void * ) 0 ) ) { strcat ( n , k ) ; strcat ( n , " " ) ; } strcat ( n , "\0" ) ; d = 3 + 1 + g + 1 + h + j ; m = malloc ( d ) ; memcpy ( m , & d , 2 ) ; memcpy ( m + 2 , & f , 1 ) ; memcpy ( m + 2 + 1 , & g , 1 ) ; memcpy ( m + 2 + 1 + 1 , l , g ) ; 
(2) FILE: ../../server.c LINES:218:5 TOKENS:1399:1456 DIST:3.5

uint16_t c ; uint8_t d , e , f ; int g = - 1 , h , i , j ; char * k , * l , * m , * n ; f = 5 ; d = * ( a + 3 ) ; l = a + 3 + 1 + d + 1 ; k = a + 3 + 1 ; e = * ( a + 3 + 1 + d ) ; m = a + 3 + 1 + d + 1 + e ; j = * ( uint16_t * ) a - 3 - 1 - d - 1 - e ; if ( strlen ( m ) == 0 ) { j = 1 ; m = malloc ( 1 ) ; memcpy ( m , " " , 1 ) ; } n = malloc ( d ) ; memcpy ( n , k , d ) ; g = compareClients ( k , d ) ; c = 3 + 1 + e + j ; a = malloc ( c ) ; memcpy ( a , & c , 2 ) ; memcpy ( a + 2 , & f , 1 ) ; memcpy ( a + 2 + 1 , & e , 1 ) ; memcpy ( a + 2 + 1 + 1 , l , e ) ; 
(3) FILE: ../../server.c LINES:265:5 TOKENS:1787:1848 DIST:0.0

int c , d , e ; char * f , * g , * h ; uint8_t i , j = 5 ; uint16_t k , l , m ; k = * ( ( uint16_t * ) a ) ; i = * ( ( uint8_t * ) ( a + 3 ) ) ; l = k - 3 - 1 - i ; h = a + 3 + 1 + i ; g = a + 3 + 1 ; if ( strlen ( h ) == 0 ) { l = 1 ; h = malloc ( 1 ) ; memcpy ( h , " " , 1 ) ; } m = 3 + 1 + i + l ; f = malloc ( m ) ; memcpy ( f , & m , 2 ) ; memcpy ( f + 2 , & j , 1 ) ; memcpy ( f + 3 , & i , 1 ) ; memcpy ( f + 3 + 1 , g , i ) ; memcpy ( f + 3 + 1 + i , h , l ) ; 
(4) FILE: ../../server.c LINES:283:5 TOKENS:1949:2006 DIST:3.5

int g ; char * h ; uint16_t i ; uint8_t j = 7 , k = d ; i = 3 + 1 + d ; h = malloc ( i ) ; memcpy ( h , & i , 2 ) ; memcpy ( h + 2 , & j , 1 ) ; memcpy ( h + 2 + 1 , & k , 1 ) ; memcpy ( h + 2 + 1 + 1 , c , k ) ; 
========== 12 ==========
(1) FILE: ../../cclient.c LINES:252:5 TOKENS:1537:1589 DIST:2.8

uint8_t d , e = 4 ; int f , g , h ; char * i = a , * j , * k , * l ; j = global_c ; i = strtok ( i , " " ) ; d = strlen ( global_c ) ; g = c - 3 ; l = malloc ( g + 1 ) ; while ( ( i = strtok ( ( ( void * ) 0 ) , " " ) ) != ( ( void * ) 0 ) ) { strcat ( l , i ) ; strcat ( l , " " ) ; } strcat ( l , "\0" ) ; strcat ( l , "\0" ) ; f = 3 + 1 + d + g ; k = malloc ( f ) ; memcpy ( k , & f , 2 ) ; memcpy ( k + 2 , & e , 1 ) ; memcpy ( k + 2 + 1 , & d , 1 ) ; 
(2) FILE: ../../server.c LINES:285:4 TOKENS:1966:2019 DIST:0.0

int g ; char * h ; uint16_t i ; uint8_t j = 7 , k = d ; i = 3 + 1 + d ; h = malloc ( i ) ; memcpy ( h , & i , 2 ) ; memcpy ( h + 2 , & j , 1 ) ; memcpy ( h + 2 + 1 , & k , 1 ) ; memcpy ( h + 2 + 1 + 1 , c , k ) ; g = mySend ( a , h , i , 0 ) ; 
========== 13 ==========
(1) FILE: ../../cclient.c LINES:227:5 TOKENS:1270:1327 DIST:3.6

uint16_t d = 0 ; char * e = " " , f = 5 ; uint8_t g , h ; int i , j = 0 ; char * k = a , * l , * m , * n ; k = strtok ( k , e ) ; l = strtok ( ( ( void * ) 0 ) , e ) ; g = strlen ( l ) ; h = strlen ( global_c ) ; j = c - 4 - g ; n = malloc ( j + 1 ) ; while ( ( k = strtok ( ( ( void * ) 0 ) , e ) ) != ( ( void * ) 0 ) ) { strcat ( n , k ) ; strcat ( n , " " ) ; } strcat ( n , "\0" ) ; d = 3 + 1 + g + 1 + h + j ; m = malloc ( d ) ; memcpy ( m , & d , 2 ) ; memcpy ( m + 2 , & f , 1 ) ; memcpy ( m + 2 + 1 , & g , 1 ) ; memcpy ( m + 2 + 1 + 1 , l , g ) ; 
(2) FILE: ../../server.c LINES:218:5 TOKENS:1399:1456 DIST:3.6

uint16_t c ; uint8_t d , e , f ; int g = - 1 , h , i , j ; char * k , * l , * m , * n ; f = 5 ; d = * ( a + 3 ) ; l = a + 3 + 1 + d + 1 ; k = a + 3 + 1 ; e = * ( a + 3 + 1 + d ) ; m = a + 3 + 1 + d + 1 + e ; j = * ( uint16_t * ) a - 3 - 1 - d - 1 - e ; if ( strlen ( m ) == 0 ) { j = 1 ; m = malloc ( 1 ) ; memcpy ( m , " " , 1 ) ; } n = malloc ( d ) ; memcpy ( n , k , d ) ; g = compareClients ( k , d ) ; c = 3 + 1 + e + j ; a = malloc ( c ) ; memcpy ( a , & c , 2 ) ; memcpy ( a + 2 , & f , 1 ) ; memcpy ( a + 2 + 1 , & e , 1 ) ; memcpy ( a + 2 + 1 + 1 , l , e ) ; 
(3) FILE: ../../server.c LINES:151:5 TOKENS:866:925 DIST:0.0

uint8_t b , c = 12 ; int d ; uint16_t e ; char * f , * g ; global_i ++ ; g = global_a [ a ] ; b = strlen ( global_a [ a ] ) ; e = 3 + 1 + b ; f = malloc ( e ) ; memcpy ( f , & e , 2 ) ; memcpy ( f + 2 , & c , 1 ) ; memcpy ( f + 3 , & b , 1 ) ; memcpy ( f + 3 + 1 , g , b ) ; d = mySend ( global_j , f , e , 0 ) ; 
(4) FILE: ../../server.c LINES:283:5 TOKENS:1949:2006 DIST:3.6

int g ; char * h ; uint16_t i ; uint8_t j = 7 , k = d ; i = 3 + 1 + d ; h = malloc ( i ) ; memcpy ( h , & i , 2 ) ; memcpy ( h + 2 , & j , 1 ) ; memcpy ( h + 2 + 1 , & k , 1 ) ; memcpy ( h + 2 + 1 + 1 , c , k ) ; 
========== 14 ==========
(1) FILE: ../../cclient.c LINES:272:9 TOKENS:1726:1786 DIST:3.6

uint16_t d ; char * e ; uint8_t f = 8 ; int g ; d = 3 ; e = malloc ( d ) ; memcpy ( e , & d , 2 ) ; memcpy ( e + 2 , & f , 1 ) ; g = mySend ( b , e , d , 0 ) ; 
(2) FILE: ../../cclient.c LINES:261:9 TOKENS:1649:1710 DIST:1.7

void handleList ( char * a , int b , int c ) { int d ; char * e ; uint8_t f = 10 ; uint16_t g = 3 ; e = malloc ( g ) ; memcpy ( e , & g , 2 ) ; memcpy ( e + 2 , & f , 1 ) ; d = mySend ( b , e , g , 0 ) ; } 
========== 15 ==========
(1) FILE: ../../server.c LINES:3:4 TOKENS:18:71 DIST:0.0
void sendMessage(char *packet, int client_socket); /* void sendMessage(char *packet, int client_socket) */

void receiveData ( int client_socket ) ; void initialPacket ( char * packet , int client_socket ) ; void sendMessage ( char * packet , int client_socket ) ; void destinationError ( int client_socket , char * invalid , char * send_to , int send_to_len , char * send_from , int send_from_len ) ; int compareClients ( char * send_to , int send_to_len ) ; void selectCall ( int server_socket ) ; 
(2) FILE: ../../server.c LINES:1:4 TOKENS:0:53 DIST:0.0
void receiveData(int client_socket); /* void receiveData(int client_socket) */
void initialPacket(char *packet, int client_socket); /* void initialPacket(char *packet, int client_socket) */
void sendMessage(char *packet, int client_socket); /* void sendMessage(char *packet, int client_socket) */

void receiveData ( int client_socket ) ; void initialPacket ( char * packet , int client_socket ) ; void sendMessage ( char * packet , int client_socket ) ; void destinationError ( int client_socket , char * invalid , char * send_to , int send_to_len , char * send_from , int send_from_len ) ; 
========== 16 ==========
(1) FILE: ../../server.c LINES:83:15 TOKENS:465:518 DIST:3.2

if ( ! global_h ) { d = * ( ( uint8_t * ) ( e + 2 ) ) ; switch ( d ) { case 1 : initialPacket ( e , a ) ; break ; case 5 : sendMessage ( e , a ) ; break ; case 4 : broadcastMessage ( e , a ) ; break ; case 8 : exitClient ( e , a ) ; break ; case 10 : listAllHandles ( e , a ) ; break ; } } else { if ( global_i == global_c ) { global_i = 0 ; global_h = 0 ; } else { sendHandle ( global_i ) ; } } 
(2) FILE: ../../cclient.c LINES:85:14 TOKENS:449:499 DIST:0.0

case 5 : receivingMessage ( c ) ; break ; case 7 : errorMessage ( c ) ; break ; case 9 : terminateClient ( c ) ; break ; case 11 : receiveNumHandles ( c , a ) ; break ; case 12 : global_d ++ ; printHandles ( c , a ) ; if ( global_d == global_a ) { global_e = 0 ; global_d = 0 ; } break ; 
========== 17 ==========
(1) FILE: ../../server.c LINES:149:6 TOKENS:851:912 DIST:0.0

uint8_t b , c = 12 ; int d ; uint16_t e ; char * f , * g ; global_i ++ ; g = global_a [ a ] ; b = strlen ( global_a [ a ] ) ; e = 3 + 1 + b ; f = malloc ( e ) ; memcpy ( f , & e , 2 ) ; memcpy ( f + 2 , & c , 1 ) ; memcpy ( f + 3 , & b , 1 ) ; memcpy ( f + 3 + 1 , g , b ) ; 
(2) FILE: ../../server.c LINES:216:6 TOKENS:1380:1441 DIST:3.5

uint16_t c ; uint8_t d , e , f ; int g = - 1 , h , i , j ; char * k , * l , * m , * n ; f = 5 ; d = * ( a + 3 ) ; l = a + 3 + 1 + d + 1 ; k = a + 3 + 1 ; e = * ( a + 3 + 1 + d ) ; m = a + 3 + 1 + d + 1 + e ; j = * ( uint16_t * ) a - 3 - 1 - d - 1 - e ; if ( strlen ( m ) == 0 ) { j = 1 ; m = malloc ( 1 ) ; memcpy ( m , " " , 1 ) ; } n = malloc ( d ) ; memcpy ( n , k , d ) ; g = compareClients ( k , d ) ; c = 3 + 1 + e + j ; a = malloc ( c ) ; memcpy ( a , & c , 2 ) ; memcpy ( a + 2 , & f , 1 ) ; memcpy ( a + 2 + 1 , & e , 1 ) ; 
========== 18 ==========
(1) FILE: ../../server.c LINES:83:15 TOKENS:463:518 DIST:0.0

if ( ! global_h ) { d = * ( ( uint8_t * ) ( e + 2 ) ) ; switch ( d ) { case 1 : initialPacket ( e , a ) ; break ; case 5 : sendMessage ( e , a ) ; break ; case 4 : broadcastMessage ( e , a ) ; break ; case 8 : exitClient ( e , a ) ; break ; case 10 : listAllHandles ( e , a ) ; break ; } } else { if ( global_i == global_c ) { global_i = 0 ; global_h = 0 ; } else { sendHandle ( global_i ) ; } } 
(2) FILE: ../../cclient.c LINES:85:13 TOKENS:447:497 DIST:2.8

case 5 : receivingMessage ( c ) ; break ; case 7 : errorMessage ( c ) ; break ; case 9 : terminateClient ( c ) ; break ; case 11 : receiveNumHandles ( c , a ) ; break ; case 12 : global_d ++ ; printHandles ( c , a ) ; if ( global_d == global_a ) { global_e = 0 ; global_d = 0 ; } 
========== 19 ==========
(1) FILE: ../../cclient.c LINES:166:6 TOKENS:852:906 DIST:0.0

global_c = a ; f = myRecv ( b , h , 1024 , 0 ) ; g = * ( uint16_t * ) h ; i = * ( ( uint8_t * ) h + 2 ) ; if ( i == 3 ) { fprintf ( stderr , "Handle already in use: <%s>\n" , a ) ; exit ( 1 ) ; } 
(2) FILE: ../../cclient.c LINES:148:23 TOKENS:837:895 DIST:3.5

void initPacket ( char * a , int b ) { ; if ( FD_ISSET ( b , & d ) ) { global_c = a ; f = myRecv ( b , h , 1024 , 0 ) ; g = * ( uint16_t * ) h ; i = * ( ( uint8_t * ) h + 2 ) ; if ( i == 3 ) { fprintf ( stderr , "Handle already in use: <%s>\n" , a ) ; exit ( 1 ) ; } free ( h ) ; } } 
========== 20 ==========
(1) FILE: ../../cclient.c LINES:261:10 TOKENS:1638:1711 DIST:0.0

void handleList ( char * a , int b , int c ) { int d ; char * e ; uint8_t f = 10 ; uint16_t g = 3 ; e = malloc ( g ) ; memcpy ( e , & g , 2 ) ; memcpy ( e + 2 , & f , 1 ) ; d = mySend ( b , e , g , 0 ) ; } 
(2) FILE: ../../cclient.c LINES:271:11 TOKENS:1712:1787 DIST:3.3

void exitClient ( char * a , int b , int c ) { uint16_t d ; char * e ; uint8_t f = 8 ; int g ; d = 3 ; e = malloc ( d ) ; memcpy ( e , & d , 2 ) ; memcpy ( e + 2 , & f , 1 ) ; g = mySend ( b , e , d , 0 ) ; } 
========== 21 ==========
(1) FILE: ../../cclient.c LINES:246:5 TOKENS:1480:1529 DIST:1.4

uint8_t d , e = 4 ; int f , g , h ; char * i = a , * j , * k , * l ; j = global_c ; i = strtok ( i , " " ) ; d = strlen ( global_c ) ; g = c - 3 ; l = malloc ( g + 1 ) ; while ( ( i = strtok ( ( ( void * ) 0 ) , " " ) ) != ( ( void * ) 0 ) ) { strcat ( l , i ) ; strcat ( l , " " ) ; } strcat ( l , "\0" ) ; 
(2) FILE: ../../cclient.c LINES:221:5 TOKENS:1206:1255 DIST:0.0

uint16_t d = 0 ; char * e = " " , f = 5 ; uint8_t g , h ; int i , j = 0 ; char * k = a , * l , * m , * n ; k = strtok ( k , e ) ; l = strtok ( ( ( void * ) 0 ) , e ) ; g = strlen ( l ) ; h = strlen ( global_c ) ; j = c - 4 - g ; n = malloc ( j + 1 ) ; while ( ( k = strtok ( ( ( void * ) 0 ) , e ) ) != ( ( void * ) 0 ) ) { strcat ( n , k ) ; strcat ( n , " " ) ; } strcat ( n , "\0" ) ; 
========== 22 ==========
(1) FILE: ../../cclient.c LINES:222:7 TOKENS:1234:1286 DIST:2.8

uint16_t d = 0 ; char * e = " " , f = 5 ; uint8_t g , h ; int i , j = 0 ; char * k = a , * l , * m , * n ; k = strtok ( k , e ) ; l = strtok ( ( ( void * ) 0 ) , e ) ; g = strlen ( l ) ; h = strlen ( global_c ) ; j = c - 4 - g ; n = malloc ( j + 1 ) ; while ( ( k = strtok ( ( ( void * ) 0 ) , e ) ) != ( ( void * ) 0 ) ) { strcat ( n , k ) ; strcat ( n , " " ) ; } strcat ( n , "\0" ) ; d = 3 + 1 + g + 1 + h + j ; m = malloc ( d ) ; memcpy ( m , & d , 2 ) ; 
(2) FILE: ../../cclient.c LINES:250:6 TOKENS:1523:1575 DIST:0.0

uint8_t d , e = 4 ; int f , g , h ; char * i = a , * j , * k , * l ; j = global_c ; i = strtok ( i , " " ) ; d = strlen ( global_c ) ; g = c - 3 ; l = malloc ( g + 1 ) ; while ( ( i = strtok ( ( ( void * ) 0 ) , " " ) ) != ( ( void * ) 0 ) ) { strcat ( l , i ) ; strcat ( l , " " ) ; } strcat ( l , "\0" ) ; strcat ( l , "\0" ) ; f = 3 + 1 + d + g ; k = malloc ( f ) ; memcpy ( k , & f , 2 ) ; memcpy ( k + 2 , & e , 1 ) ; 
========== 23 ==========
(1) FILE: ../../server.c LINES:263:5 TOKENS:1770:1820 DIST:0.0

int c , d , e ; char * f , * g , * h ; uint8_t i , j = 5 ; uint16_t k , l , m ; k = * ( ( uint16_t * ) a ) ; i = * ( ( uint8_t * ) ( a + 3 ) ) ; l = k - 3 - 1 - i ; h = a + 3 + 1 + i ; g = a + 3 + 1 ; if ( strlen ( h ) == 0 ) { l = 1 ; h = malloc ( 1 ) ; memcpy ( h , " " , 1 ) ; } m = 3 + 1 + i + l ; f = malloc ( m ) ; memcpy ( f , & m , 2 ) ; memcpy ( f + 2 , & j , 1 ) ; memcpy ( f + 3 , & i , 1 ) ; 
(2) FILE: ../../cclient.c LINES:252:5 TOKENS:1537:1589 DIST:3.0

uint8_t d , e = 4 ; int f , g , h ; char * i = a , * j , * k , * l ; j = global_c ; i = strtok ( i , " " ) ; d = strlen ( global_c ) ; g = c - 3 ; l = malloc ( g + 1 ) ; while ( ( i = strtok ( ( ( void * ) 0 ) , " " ) ) != ( ( void * ) 0 ) ) { strcat ( l , i ) ; strcat ( l , " " ) ; } strcat ( l , "\0" ) ; strcat ( l , "\0" ) ; f = 3 + 1 + d + g ; k = malloc ( f ) ; memcpy ( k , & f , 2 ) ; memcpy ( k + 2 , & e , 1 ) ; memcpy ( k + 2 + 1 , & d , 1 ) ; 
(3) FILE: ../../cclient.c LINES:225:5 TOKENS:1249:1298 DIST:2.8

uint16_t d = 0 ; char * e = " " , f = 5 ; uint8_t g , h ; int i , j = 0 ; char * k = a , * l , * m , * n ; k = strtok ( k , e ) ; l = strtok ( ( ( void * ) 0 ) , e ) ; g = strlen ( l ) ; h = strlen ( global_c ) ; j = c - 4 - g ; n = malloc ( j + 1 ) ; while ( ( k = strtok ( ( ( void * ) 0 ) , e ) ) != ( ( void * ) 0 ) ) { strcat ( n , k ) ; strcat ( n , " " ) ; } strcat ( n , "\0" ) ; d = 3 + 1 + g + 1 + h + j ; m = malloc ( d ) ; memcpy ( m , & d , 2 ) ; memcpy ( m + 2 , & f , 1 ) ; 
========== 24 ==========
(1) FILE: ../../cclient.c LINES:227:5 TOKENS:1270:1327 DIST:3.3

uint16_t d = 0 ; char * e = " " , f = 5 ; uint8_t g , h ; int i , j = 0 ; char * k = a , * l , * m , * n ; k = strtok ( k , e ) ; l = strtok ( ( ( void * ) 0 ) , e ) ; g = strlen ( l ) ; h = strlen ( global_c ) ; j = c - 4 - g ; n = malloc ( j + 1 ) ; while ( ( k = strtok ( ( ( void * ) 0 ) , e ) ) != ( ( void * ) 0 ) ) { strcat ( n , k ) ; strcat ( n , " " ) ; } strcat ( n , "\0" ) ; d = 3 + 1 + g + 1 + h + j ; m = malloc ( d ) ; memcpy ( m , & d , 2 ) ; memcpy ( m + 2 , & f , 1 ) ; memcpy ( m + 2 + 1 , & g , 1 ) ; memcpy ( m + 2 + 1 + 1 , l , g ) ; 
(2) FILE: ../../server.c LINES:218:5 TOKENS:1399:1456 DIST:3.3

uint16_t c ; uint8_t d , e , f ; int g = - 1 , h , i , j ; char * k , * l , * m , * n ; f = 5 ; d = * ( a + 3 ) ; l = a + 3 + 1 + d + 1 ; k = a + 3 + 1 ; e = * ( a + 3 + 1 + d ) ; m = a + 3 + 1 + d + 1 + e ; j = * ( uint16_t * ) a - 3 - 1 - d - 1 - e ; if ( strlen ( m ) == 0 ) { j = 1 ; m = malloc ( 1 ) ; memcpy ( m , " " , 1 ) ; } n = malloc ( d ) ; memcpy ( n , k , d ) ; g = compareClients ( k , d ) ; c = 3 + 1 + e + j ; a = malloc ( c ) ; memcpy ( a , & c , 2 ) ; memcpy ( a + 2 , & f , 1 ) ; memcpy ( a + 2 + 1 , & e , 1 ) ; memcpy ( a + 2 + 1 + 1 , l , e ) ; 
(3) FILE: ../../cclient.c LINES:252:5 TOKENS:1537:1589 DIST:0.0

uint8_t d , e = 4 ; int f , g , h ; char * i = a , * j , * k , * l ; j = global_c ; i = strtok ( i , " " ) ; d = strlen ( global_c ) ; g = c - 3 ; l = malloc ( g + 1 ) ; while ( ( i = strtok ( ( ( void * ) 0 ) , " " ) ) != ( ( void * ) 0 ) ) { strcat ( l , i ) ; strcat ( l , " " ) ; } strcat ( l , "\0" ) ; strcat ( l , "\0" ) ; f = 3 + 1 + d + g ; k = malloc ( f ) ; memcpy ( k , & f , 2 ) ; memcpy ( k + 2 , & e , 1 ) ; memcpy ( k + 2 + 1 , & d , 1 ) ; 
(4) FILE: ../../server.c LINES:283:5 TOKENS:1949:2006 DIST:3.3

int g ; char * h ; uint16_t i ; uint8_t j = 7 , k = d ; i = 3 + 1 + d ; h = malloc ( i ) ; memcpy ( h , & i , 2 ) ; memcpy ( h + 2 , & j , 1 ) ; memcpy ( h + 2 + 1 , & k , 1 ) ; memcpy ( h + 2 + 1 + 1 , c , k ) ; 
========== 25 ==========
(1) FILE: ../../server.c LINES:131:7 TOKENS:730:784 DIST:0.0

int c ; char * d ; uint16_t e ; uint8_t f = 11 ; global_h = 1 ; global_j = b ; e = 3 + 4 ; d = malloc ( e ) ; memcpy ( d , & e , 2 ) ; memcpy ( d + 2 , & f , 1 ) ; memcpy ( d + 3 , & global_c , 4 ) ; 
(2) FILE: ../../server.c LINES:260:7 TOKENS:1753:1808 DIST:3.5

int c , d , e ; char * f , * g , * h ; uint8_t i , j = 5 ; uint16_t k , l , m ; k = * ( ( uint16_t * ) a ) ; i = * ( ( uint8_t * ) ( a + 3 ) ) ; l = k - 3 - 1 - i ; h = a + 3 + 1 + i ; g = a + 3 + 1 ; if ( strlen ( h ) == 0 ) { l = 1 ; h = malloc ( 1 ) ; memcpy ( h , " " , 1 ) ; } m = 3 + 1 + i + l ; f = malloc ( m ) ; memcpy ( f , & m , 2 ) ; memcpy ( f + 2 , & j , 1 ) ; 
