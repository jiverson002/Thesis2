========== 1 ==========
(1) FILE: ../../server.c LINES:216:6 TOKENS:1385:1436 DIST:0.0

char * c , * d , * e , * f ; uint8_t g , h , i ; int j = - 1 , k , l , m ; uint16_t n ; g = * ( a + 3 ) ; c = a + 3 + 1 ; h = * ( a + 3 + 1 + g ) ; d = a + 3 + 1 + g + 1 ; e = a + 3 + 1 + g + 1 + h ; m = * ( uint16_t * ) a - 3 - 1 - g - 1 - h ; if ( strlen ( e ) == 0 ) { e = malloc ( 1 ) ; memcpy ( e , " " , 1 ) ; m = 1 ; } f = malloc ( g ) ; memcpy ( f , c , g ) ; j = compareClients ( c , g ) ; i = 5 ; n = 3 + 1 + h + m ; a = malloc ( n ) ; memcpy ( a , & n , 2 ) ; memcpy ( a + 2 , & i , 1 ) ; 
(2) FILE: ../../server.c LINES:258:8 TOKENS:1743:1798 DIST:3.7

char * c , * d , * e ; uint16_t f , g , h ; uint8_t i , j = 5 ; f = * ( ( uint16_t * ) a ) ; i = * ( ( uint8_t * ) ( a + 3 ) ) ; d = a + 3 + 1 ; e = a + 3 + 1 + i ; g = f - 3 - 1 - i ; if ( strlen ( e ) == 0 ) { e = malloc ( 1 ) ; memcpy ( e , " " , 1 ) ; g = 1 ; } h = 3 + 1 + i + g ; c = malloc ( h ) ; memcpy ( c , & h , 2 ) ; 
========== 2 ==========
(1) FILE: ../../cclient.c LINES:261:8 TOKENS:1637:1692 DIST:3.5

void handleList ( char * a , int b , int c ) { char * d ; uint16_t e = 3 ; uint8_t f = 10 ; int g ; d = malloc ( e ) ; memcpy ( d , & e , 2 ) ; memcpy ( d + 2 , & f , 1 ) ; g = mySend ( b , d , e , 0 ) ; } 
(2) FILE: ../../cclient.c LINES:271:9 TOKENS:1712:1768 DIST:0.0

void exitClient ( char * a , int b , int c ) { uint16_t d ; uint8_t e = 8 ; char * f ; int g ; d = 3 ; f = malloc ( d ) ; memcpy ( f , & d , 2 ) ; memcpy ( f + 2 , & e , 1 ) ; g = mySend ( b , f , d , 0 ) ; } 
========== 3 ==========
(1) FILE: ../../cclient.c LINES:271:10 TOKENS:1718:1781 DIST:3.6

void exitClient ( char * a , int b , int c ) { uint16_t d ; uint8_t e = 8 ; char * f ; int g ; d = 3 ; f = malloc ( d ) ; memcpy ( f , & d , 2 ) ; memcpy ( f + 2 , & e , 1 ) ; g = mySend ( b , f , d , 0 ) ; } 
(2) FILE: ../../cclient.c LINES:261:9 TOKENS:1643:1705 DIST:0.0

void handleList ( char * a , int b , int c ) { char * d ; uint16_t e = 3 ; uint8_t f = 10 ; int g ; d = malloc ( e ) ; memcpy ( d , & e , 2 ) ; memcpy ( d + 2 , & f , 1 ) ; g = mySend ( b , d , e , 0 ) ; } 
========== 4 ==========
(1) FILE: ../../server.c LINES:3:4 TOKENS:18:71 DIST:0.0
void sendMessage(char *packet, int client_socket); /* void sendMessage(char *packet, int client_socket) */

void receiveData ( int client_socket ) ; void initialPacket ( char * packet , int client_socket ) ; void sendMessage ( char * packet , int client_socket ) ; void destinationError ( int client_socket , char * invalid , char * send_to , int send_to_len , char * send_from , int send_from_len ) ; int compareClients ( char * send_to , int send_to_len ) ; void selectCall ( int server_socket ) ; 
(2) FILE: ../../server.c LINES:1:4 TOKENS:0:53 DIST:0.0
void receiveData(int client_socket); /* void receiveData(int client_socket) */
void initialPacket(char *packet, int client_socket); /* void initialPacket(char *packet, int client_socket) */
void sendMessage(char *packet, int client_socket); /* void sendMessage(char *packet, int client_socket) */

void receiveData ( int client_socket ) ; void initialPacket ( char * packet , int client_socket ) ; void sendMessage ( char * packet , int client_socket ) ; void destinationError ( int client_socket , char * invalid , char * send_to , int send_to_len , char * send_from , int send_from_len ) ; 
(3) FILE: ../../cclient.c LINES:5:4 TOKENS:31:86 DIST:2.0

void startUp ( int socket_fd ) ; void printPrompt ( void ) ; void initPacket ( char * client_handle , int socket_fd ) ; void promptUser ( int socket_fd ) ; void message ( char * input , int socket_fd , int send_len ) ; void broadcast ( char * input , int socket_fd , int send_len ) ; void handleList ( char * input , int socket_fd , int send_len ) ; void exitClient ( char * input , int socket_fd , int send_len ) ; 
========== 5 ==========
(1) FILE: ../../cclient.c LINES:261:8 TOKENS:1634:1692 DIST:2.4

void handleList ( char * a , int b , int c ) { char * d ; uint16_t e = 3 ; uint8_t f = 10 ; int g ; d = malloc ( e ) ; memcpy ( d , & e , 2 ) ; memcpy ( d + 2 , & f , 1 ) ; g = mySend ( b , d , e , 0 ) ; } 
(2) FILE: ../../server.c LINES:103:8 TOKENS:538:594 DIST:0.0

void exitClient ( char * a , int b ) { char * c ; uint16_t d = 3 ; uint8_t e = 9 ; int f ; c = malloc ( 3 ) ; memcpy ( c , & d , 2 ) ; memcpy ( c + 2 , & e , 1 ) ; int g , h = - 1 ; for ( g = 0 ; g < global_g ; g ++ ) { if ( global_d [ g ] == b ) { h = g ; } } for ( g = h ; g < global_g - 1 ; g ++ ) { global_d [ g ] = global_d [ g + 1 ] ; } for ( g = h - 1 ; g < global_c - 1 ; g ++ ) { global_a [ g ] = global_a [ g + 1 ] ; } global_c -- ; global_g -- ; f = mySend ( b , c , d , 0 ) ; } 
========== 6 ==========
(1) FILE: ../../cclient.c LINES:249:7 TOKENS:1514:1570 DIST:3.3

char * d = a , * e , * f , * g ; uint8_t h , i = 4 ; int j , k , l ; d = strtok ( d , " " ) ; h = strlen ( global_c ) ; k = c - 3 ; g = malloc ( k + 1 ) ; while ( ( d = strtok ( ( ( void * ) 0 ) , " " ) ) != ( ( void * ) 0 ) ) { strcat ( g , d ) ; strcat ( g , " " ) ; } strcat ( g , "\0" ) ; e = global_c ; strcat ( g , "\0" ) ; j = 3 + 1 + h + k ; f = malloc ( j ) ; memcpy ( f , & j , 2 ) ; memcpy ( f + 2 , & i , 1 ) ; 
(2) FILE: ../../cclient.c LINES:223:7 TOKENS:1236:1293 DIST:0.0

char * d = a , * e , * f , * g ; char * h = " " , i = 5 ; int j , k = 0 ; uint16_t l = 0 ; uint8_t m , n ; d = strtok ( d , h ) ; e = strtok ( ( ( void * ) 0 ) , h ) ; m = strlen ( e ) ; n = strlen ( global_c ) ; k = c - 4 - m ; g = malloc ( k + 1 ) ; while ( ( d = strtok ( ( ( void * ) 0 ) , h ) ) != ( ( void * ) 0 ) ) { strcat ( g , d ) ; strcat ( g , " " ) ; } strcat ( g , "\0" ) ; l = 3 + 1 + m + 1 + n + k ; f = malloc ( l ) ; memcpy ( f , & l , 2 ) ; memcpy ( f + 2 , & i , 1 ) ; 
========== 7 ==========
(1) FILE: ../../cclient.c LINES:228:4 TOKENS:1272:1322 DIST:0.0

char * d = a , * e , * f , * g ; char * h = " " , i = 5 ; int j , k = 0 ; uint16_t l = 0 ; uint8_t m , n ; d = strtok ( d , h ) ; e = strtok ( ( ( void * ) 0 ) , h ) ; m = strlen ( e ) ; n = strlen ( global_c ) ; k = c - 4 - m ; g = malloc ( k + 1 ) ; while ( ( d = strtok ( ( ( void * ) 0 ) , h ) ) != ( ( void * ) 0 ) ) { strcat ( g , d ) ; strcat ( g , " " ) ; } strcat ( g , "\0" ) ; l = 3 + 1 + m + 1 + n + k ; f = malloc ( l ) ; memcpy ( f , & l , 2 ) ; memcpy ( f + 2 , & i , 1 ) ; memcpy ( f + 2 + 1 , & m , 1 ) ; memcpy ( f + 2 + 1 + 1 , e , m ) ; 
(2) FILE: ../../server.c LINES:285:4 TOKENS:1965:2015 DIST:0.0

char * g ; uint16_t h ; uint8_t i = 7 , j = d ; int k ; h = 3 + 1 + d ; g = malloc ( h ) ; memcpy ( g , & h , 2 ) ; memcpy ( g + 2 , & i , 1 ) ; memcpy ( g + 2 + 1 , & j , 1 ) ; memcpy ( g + 2 + 1 + 1 , c , j ) ; 
(3) FILE: ../../server.c LINES:220:4 TOKENS:1415:1465 DIST:0.0

char * c , * d , * e , * f ; uint8_t g , h , i ; int j = - 1 , k , l , m ; uint16_t n ; g = * ( a + 3 ) ; c = a + 3 + 1 ; h = * ( a + 3 + 1 + g ) ; d = a + 3 + 1 + g + 1 ; e = a + 3 + 1 + g + 1 + h ; m = * ( uint16_t * ) a - 3 - 1 - g - 1 - h ; if ( strlen ( e ) == 0 ) { e = malloc ( 1 ) ; memcpy ( e , " " , 1 ) ; m = 1 ; } f = malloc ( g ) ; memcpy ( f , c , g ) ; j = compareClients ( c , g ) ; i = 5 ; n = 3 + 1 + h + m ; a = malloc ( n ) ; memcpy ( a , & n , 2 ) ; memcpy ( a + 2 , & i , 1 ) ; memcpy ( a + 2 + 1 , & h , 1 ) ; memcpy ( a + 2 + 1 + 1 , d , h ) ; 
========== 8 ==========
(1) FILE: ../../cclient.c LINES:253:5 TOKENS:1542:1599 DIST:3.6

char * d = a , * e , * f , * g ; uint8_t h , i = 4 ; int j , k , l ; d = strtok ( d , " " ) ; h = strlen ( global_c ) ; k = c - 3 ; g = malloc ( k + 1 ) ; while ( ( d = strtok ( ( ( void * ) 0 ) , " " ) ) != ( ( void * ) 0 ) ) { strcat ( g , d ) ; strcat ( g , " " ) ; } strcat ( g , "\0" ) ; e = global_c ; strcat ( g , "\0" ) ; j = 3 + 1 + h + k ; f = malloc ( j ) ; memcpy ( f , & j , 2 ) ; memcpy ( f + 2 , & i , 1 ) ; memcpy ( f + 2 + 1 , & h , 1 ) ; memcpy ( f + 2 + 1 + 1 , e , h ) ; 
(2) FILE: ../../server.c LINES:151:5 TOKENS:872:931 DIST:0.0

char * b , * c ; uint8_t d , e = 12 ; uint16_t f ; int g ; c = global_a [ a ] ; d = strlen ( global_a [ a ] ) ; f = 3 + 1 + d ; b = malloc ( f ) ; memcpy ( b , & f , 2 ) ; memcpy ( b + 2 , & e , 1 ) ; memcpy ( b + 3 , & d , 1 ) ; memcpy ( b + 3 + 1 , c , d ) ; g = mySend ( global_j , b , f , 0 ) ; 
========== 9 ==========
(1) FILE: ../../cclient.c LINES:251:6 TOKENS:1525:1584 DIST:2.6

char * d = a , * e , * f , * g ; uint8_t h , i = 4 ; int j , k , l ; d = strtok ( d , " " ) ; h = strlen ( global_c ) ; k = c - 3 ; g = malloc ( k + 1 ) ; while ( ( d = strtok ( ( ( void * ) 0 ) , " " ) ) != ( ( void * ) 0 ) ) { strcat ( g , d ) ; strcat ( g , " " ) ; } strcat ( g , "\0" ) ; e = global_c ; strcat ( g , "\0" ) ; j = 3 + 1 + h + k ; f = malloc ( j ) ; memcpy ( f , & j , 2 ) ; memcpy ( f + 2 , & i , 1 ) ; memcpy ( f + 2 + 1 , & h , 1 ) ; 
(2) FILE: ../../server.c LINES:149:6 TOKENS:857:918 DIST:0.0

char * b , * c ; uint8_t d , e = 12 ; uint16_t f ; int g ; c = global_a [ a ] ; d = strlen ( global_a [ a ] ) ; f = 3 + 1 + d ; b = malloc ( f ) ; memcpy ( b , & f , 2 ) ; memcpy ( b + 2 , & e , 1 ) ; memcpy ( b + 3 , & d , 1 ) ; memcpy ( b + 3 + 1 , c , d ) ; 
========== 10 ==========
(1) FILE: ../../cclient.c LINES:129:7 TOKENS:686:737 DIST:1.4

void startUp ( int socket_fd ) ; void printPrompt ( void ) ; void initPacket ( char * client_handle , int socket_fd ) ; void promptUser ( int socket_fd ) ; void message ( char * input , int socket_fd , int send_len ) ; void broadcast ( char * input , int socket_fd , int send_len ) ; void handleList ( char * input , int socket_fd , int send_len ) ; void exitClient ( char * input , int socket_fd , int send_len ) ; void transmitCheck ( int socket_fd ) ; void receivingMessage ( char * packet ) ; void errorMessage ( char * packet ) ; void receiveNumHandles ( char * packet , int socket_fd ) ; void printHandles ( char * packet , int socket_fd ) ; void terminateClient ( char * packet ) ; char * global_c ; int global_b = 3 ; int global_e = 0 ; int global_a = 0 ; int global_d = 0 ; unsigned int __bswap_32 ( unsigned int a ) { ; } __uint64_t __bswap_64 ( __uint64_t a ) { ; } int main ( int a , char * b ) { int c = 0 ; if ( a != 4 ) { fprintf ( stderr , "Error - must include IP address, port number, and client handle name\n" ) ; exit ( 1 ) ; } c = tcpClientSetup ( b [ 2 ] , b [ 3 ] ) ; initPacket ( b [ 1 ] , c ) ; startUp ( c ) ; close ( c ) ; return 0 ; } void startUp ( int a ) { ; FD_ZERO ( & c ) ; FD_SET ( a , & c ) ; while ( 1 ) { if ( ! global_e ) { printPrompt ( ) ; } while ( 1 ) { ; } if ( ! global_e ) { if ( FD_ISSET ( 0 , & c ) ) { promptUser ( a ) ; } } break ; } break ; } } } void transmitCheck ( int a ) { char * b = ( ( void * ) 0 ) ; int c = - 1 ; uint8_t d ; struct timeval e ; e . tv_sec = 1 ; e . tv_usec = 0 ; b = malloc ( 1024 ) ; c = myRecv ( a , b , 1024 , 0 ) ; if ( c != - 1 ) { d = * ( b + 2 ) ; switch ( d ) { case 5 : receivingMessage ( b ) ; break ; case 7 : errorMessage ( b ) ; break ; case 9 : terminateClient ( b ) ; break ; case 11 : receiveNumHandles ( b , a ) ; break ; case 12 : global_d ++ ; printHandles ( b , a ) ; if ( global_d == global_a ) { global_e = 0 ; global_d = 0 ; } break ; default : break ; } } } void terminateClient ( char * a ) { printf ( "\n" ) ; exit ( 0 ) ; } void printHandles ( char * a , int b ) { uint16_t c , d = 3 ; uint8_t e ; uint8_t f ; char * g , * h = malloc ( 3 ) ; c = * ( uint16_t * ) a ; f = * ( ( uint8_t * ) ( a + 3 ) ) ; g = a + 3 + 1 ; printf ( "\t%s\n" , g ) ; e = 0 ; memcpy ( h , & d , 2 ) ; memcpy ( h + 2 , & e , 1 ) ; mySend ( b , h , d , 0 ) ; } void receiveNumHandles ( char * a , int b ) { uint32_t c ; char * d = malloc ( 3 ) ; uint16_t e = 3 ; int f = 0 ; c = * ( ( uint32_t * ) ( a + 3 ) ) ; global_a = c ; printf ( "\nNumber of clients: %d\n" , c ) ; global_e = 1 ; memcpy ( d , & e , 2 ) ; memcpy ( d + 2 , & f , 1 ) ; mySend ( b , d , e , 0 ) ; } void receivingMessage ( char * a ) { char * b , * c , * d ; uint16_t e ; uint8_t f ; e = * ( ( uint16_t * ) a ) ; f = * ( a + 3 ) ; b = a + 3 + 1 ; c = a + 3 + 1 + f ; d = malloc ( f ) ; memcpy ( d , b , f ) ; printf ( "\n%s: %s\n" , d , c ) ; free ( d ) ; } 
(2) FILE: ../../cclient.c LINES:116:7 TOKENS:589:641 DIST:0.0

void startUp ( int socket_fd ) ; void printPrompt ( void ) ; void initPacket ( char * client_handle , int socket_fd ) ; void promptUser ( int socket_fd ) ; void message ( char * input , int socket_fd , int send_len ) ; void broadcast ( char * input , int socket_fd , int send_len ) ; void handleList ( char * input , int socket_fd , int send_len ) ; void exitClient ( char * input , int socket_fd , int send_len ) ; void transmitCheck ( int socket_fd ) ; void receivingMessage ( char * packet ) ; void errorMessage ( char * packet ) ; void receiveNumHandles ( char * packet , int socket_fd ) ; void printHandles ( char * packet , int socket_fd ) ; void terminateClient ( char * packet ) ; char * global_c ; int global_b = 3 ; int global_e = 0 ; int global_a = 0 ; int global_d = 0 ; unsigned int __bswap_32 ( unsigned int a ) { ; } __uint64_t __bswap_64 ( __uint64_t a ) { ; } int main ( int a , char * b ) { int c = 0 ; if ( a != 4 ) { fprintf ( stderr , "Error - must include IP address, port number, and client handle name\n" ) ; exit ( 1 ) ; } c = tcpClientSetup ( b [ 2 ] , b [ 3 ] ) ; initPacket ( b [ 1 ] , c ) ; startUp ( c ) ; close ( c ) ; return 0 ; } void startUp ( int a ) { ; FD_ZERO ( & c ) ; FD_SET ( a , & c ) ; while ( 1 ) { if ( ! global_e ) { printPrompt ( ) ; } while ( 1 ) { ; } if ( ! global_e ) { if ( FD_ISSET ( 0 , & c ) ) { promptUser ( a ) ; } } break ; } break ; } } } void transmitCheck ( int a ) { char * b = ( ( void * ) 0 ) ; int c = - 1 ; uint8_t d ; struct timeval e ; e . tv_sec = 1 ; e . tv_usec = 0 ; b = malloc ( 1024 ) ; c = myRecv ( a , b , 1024 , 0 ) ; if ( c != - 1 ) { d = * ( b + 2 ) ; switch ( d ) { case 5 : receivingMessage ( b ) ; break ; case 7 : errorMessage ( b ) ; break ; case 9 : terminateClient ( b ) ; break ; case 11 : receiveNumHandles ( b , a ) ; break ; case 12 : global_d ++ ; printHandles ( b , a ) ; if ( global_d == global_a ) { global_e = 0 ; global_d = 0 ; } break ; default : break ; } } } void terminateClient ( char * a ) { printf ( "\n" ) ; exit ( 0 ) ; } void printHandles ( char * a , int b ) { uint16_t c , d = 3 ; uint8_t e ; uint8_t f ; char * g , * h = malloc ( 3 ) ; c = * ( uint16_t * ) a ; f = * ( ( uint8_t * ) ( a + 3 ) ) ; g = a + 3 + 1 ; printf ( "\t%s\n" , g ) ; e = 0 ; memcpy ( h , & d , 2 ) ; memcpy ( h + 2 , & e , 1 ) ; mySend ( b , h , d , 0 ) ; } void receiveNumHandles ( char * a , int b ) { uint32_t c ; char * d = malloc ( 3 ) ; uint16_t e = 3 ; int f = 0 ; c = * ( ( uint32_t * ) ( a + 3 ) ) ; global_a = c ; printf ( "\nNumber of clients: %d\n" , c ) ; global_e = 1 ; memcpy ( d , & e , 2 ) ; memcpy ( d + 2 , & f , 1 ) ; mySend ( b , d , e , 0 ) ; } 
========== 11 ==========
(1) FILE: ../../cclient.c LINES:194:12 TOKENS:1036:1086 DIST:2.8

case 'm' : message ( b , a , d ) ; break ; case 'b' : broadcast ( b , a , d ) ; break ; case 'l' : handleList ( b , a , d ) ; break ; case 'e' : exitClient ( b , a , d ) ; break ; default : printf ( "Invalid command\n" ) ; break ; 
(2) FILE: ../../server.c LINES:77:14 TOKENS:445:496 DIST:0.0

switch ( e ) { case 1 : initialPacket ( c , a ) ; break ; case 5 : sendMessage ( c , a ) ; break ; case 4 : broadcastMessage ( c , a ) ; break ; case 8 : exitClient ( c , a ) ; break ; case 10 : listAllHandles ( c , a ) ; break ; } 
========== 12 ==========
(1) FILE: ../../cclient.c LINES:194:12 TOKENS:1036:1086 DIST:3.0

case 'm' : message ( b , a , d ) ; break ; case 'b' : broadcast ( b , a , d ) ; break ; case 'l' : handleList ( b , a , d ) ; break ; case 'e' : exitClient ( b , a , d ) ; break ; default : printf ( "Invalid command\n" ) ; break ; 
(2) FILE: ../../server.c LINES:78:13 TOKENS:449:498 DIST:0.0

case 1 : initialPacket ( c , a ) ; break ; case 5 : sendMessage ( c , a ) ; break ; case 4 : broadcastMessage ( c , a ) ; break ; case 8 : exitClient ( c , a ) ; break ; case 10 : 
========== 13 ==========
(1) FILE: ../../cclient.c LINES:1:6 TOKENS:0:58 DIST:1.7
void startUp(int socket_fd); /* void startUp(int socket_fd) */
void printPrompt(void); /* void printPrompt(void) */
void initPacket(char *client_handle, int socket_fd); /* void initPacket(char *client_handle, int socket_fd) */
void promptUser(int socket_fd); /* void promptUser(int socket_fd) */
void message(char *input, int socket_fd, int send_len); /* void message(char *input, int socket_fd, int send_len) */

void startUp ( int socket_fd ) ; void printPrompt ( void ) ; void initPacket ( char * client_handle , int socket_fd ) ; void promptUser ( int socket_fd ) ; void message ( char * input , int socket_fd , int send_len ) ; void broadcast ( char * input , int socket_fd , int send_len ) ; 
(2) FILE: ../../server.c LINES:5:6 TOKENS:54:111 DIST:0.0
int compareClients(char *send_to, int send_to_len); /* int compareClients(char *send_to, int send_to_len) */

void receiveData ( int client_socket ) ; void initialPacket ( char * packet , int client_socket ) ; void sendMessage ( char * packet , int client_socket ) ; void destinationError ( int client_socket , char * invalid , char * send_to , int send_to_len , char * send_from , int send_from_len ) ; int compareClients ( char * send_to , int send_to_len ) ; void selectCall ( int server_socket ) ; void broadcastMessage ( char * packet , int client_socket ) ; void listAllHandles ( char * packet , int client_socket ) ; void sendHandle ( int sending_index ) ; void exitClient ( char * packet , int client_socket ) ; 
========== 14 ==========
(1) FILE: ../../server.c LINES:218:5 TOKENS:1398:1450 DIST:0.0

char * c , * d , * e , * f ; uint8_t g , h , i ; int j = - 1 , k , l , m ; uint16_t n ; g = * ( a + 3 ) ; c = a + 3 + 1 ; h = * ( a + 3 + 1 + g ) ; d = a + 3 + 1 + g + 1 ; e = a + 3 + 1 + g + 1 + h ; m = * ( uint16_t * ) a - 3 - 1 - g - 1 - h ; if ( strlen ( e ) == 0 ) { e = malloc ( 1 ) ; memcpy ( e , " " , 1 ) ; m = 1 ; } f = malloc ( g ) ; memcpy ( f , c , g ) ; j = compareClients ( c , g ) ; i = 5 ; n = 3 + 1 + h + m ; a = malloc ( n ) ; memcpy ( a , & n , 2 ) ; memcpy ( a + 2 , & i , 1 ) ; memcpy ( a + 2 + 1 , & h , 1 ) ; 
(2) FILE: ../../cclient.c LINES:253:5 TOKENS:1542:1599 DIST:3.3

char * d = a , * e , * f , * g ; uint8_t h , i = 4 ; int j , k , l ; d = strtok ( d , " " ) ; h = strlen ( global_c ) ; k = c - 3 ; g = malloc ( k + 1 ) ; while ( ( d = strtok ( ( ( void * ) 0 ) , " " ) ) != ( ( void * ) 0 ) ) { strcat ( g , d ) ; strcat ( g , " " ) ; } strcat ( g , "\0" ) ; e = global_c ; strcat ( g , "\0" ) ; j = 3 + 1 + h + k ; f = malloc ( j ) ; memcpy ( f , & j , 2 ) ; memcpy ( f + 2 , & i , 1 ) ; memcpy ( f + 2 + 1 , & h , 1 ) ; memcpy ( f + 2 + 1 + 1 , e , h ) ; 
========== 15 ==========
(1) FILE: ../../server.c LINES:3:4 TOKENS:18:71 DIST:0.0
void sendMessage(char *packet, int client_socket); /* void sendMessage(char *packet, int client_socket) */

void receiveData ( int client_socket ) ; void initialPacket ( char * packet , int client_socket ) ; void sendMessage ( char * packet , int client_socket ) ; void destinationError ( int client_socket , char * invalid , char * send_to , int send_to_len , char * send_from , int send_from_len ) ; int compareClients ( char * send_to , int send_to_len ) ; void selectCall ( int server_socket ) ; 
(2) FILE: ../../server.c LINES:1:4 TOKENS:0:53 DIST:0.0
void receiveData(int client_socket); /* void receiveData(int client_socket) */
void initialPacket(char *packet, int client_socket); /* void initialPacket(char *packet, int client_socket) */
void sendMessage(char *packet, int client_socket); /* void sendMessage(char *packet, int client_socket) */

void receiveData ( int client_socket ) ; void initialPacket ( char * packet , int client_socket ) ; void sendMessage ( char * packet , int client_socket ) ; void destinationError ( int client_socket , char * invalid , char * send_to , int send_to_len , char * send_from , int send_from_len ) ; 
========== 16 ==========
(1) FILE: ../../server.c LINES:77:17 TOKENS:447:508 DIST:0.0

{ case 1 : initialPacket ( c , a ) ; break ; case 5 : sendMessage ( c , a ) ; break ; case 4 : broadcastMessage ( c , a ) ; break ; case 8 : exitClient ( c , a ) ; break ; case 10 : listAllHandles ( c , a ) ; break ; } 
(2) FILE: ../../cclient.c LINES:78:16 TOKENS:419:476 DIST:3.5

switch ( d ) { case 5 : receivingMessage ( b ) ; break ; case 7 : errorMessage ( b ) ; break ; case 9 : terminateClient ( b ) ; break ; case 11 : receiveNumHandles ( b , a ) ; break ; case 12 : global_d ++ ; printHandles ( b , a ) ; if ( global_d == global_a ) { global_e = 0 ; global_d = 0 ; } break ; default : break ; } 
========== 17 ==========
(1) FILE: ../../cclient.c LINES:251:6 TOKENS:1525:1584 DIST:3.7

char * d = a , * e , * f , * g ; uint8_t h , i = 4 ; int j , k , l ; d = strtok ( d , " " ) ; h = strlen ( global_c ) ; k = c - 3 ; g = malloc ( k + 1 ) ; while ( ( d = strtok ( ( ( void * ) 0 ) , " " ) ) != ( ( void * ) 0 ) ) { strcat ( g , d ) ; strcat ( g , " " ) ; } strcat ( g , "\0" ) ; e = global_c ; strcat ( g , "\0" ) ; j = 3 + 1 + h + k ; f = malloc ( j ) ; memcpy ( f , & j , 2 ) ; memcpy ( f + 2 , & i , 1 ) ; memcpy ( f + 2 + 1 , & h , 1 ) ; 
(2) FILE: ../../server.c LINES:265:5 TOKENS:1789:1850 DIST:0.0

char * c , * d , * e ; uint16_t f , g , h ; uint8_t i , j = 5 ; f = * ( ( uint16_t * ) a ) ; i = * ( ( uint8_t * ) ( a + 3 ) ) ; d = a + 3 + 1 ; e = a + 3 + 1 + i ; g = f - 3 - 1 - i ; if ( strlen ( e ) == 0 ) { e = malloc ( 1 ) ; memcpy ( e , " " , 1 ) ; g = 1 ; } h = 3 + 1 + i + g ; c = malloc ( h ) ; memcpy ( c , & h , 2 ) ; memcpy ( c + 2 , & j , 1 ) ; memcpy ( c + 3 , & i , 1 ) ; memcpy ( c + 3 + 1 , d , i ) ; memcpy ( c + 3 + 1 + i , e , g ) ; 
========== 18 ==========
(1) FILE: ../../server.c LINES:84:15 TOKENS:473:527 DIST:2.8

if ( ! global_h ) { d = * ( uint16_t * ) c ; e = * ( ( uint8_t * ) ( c + 2 ) ) ; switch ( e ) { case 1 : initialPacket ( c , a ) ; break ; case 5 : sendMessage ( c , a ) ; break ; case 4 : broadcastMessage ( c , a ) ; break ; case 8 : exitClient ( c , a ) ; break ; case 10 : listAllHandles ( c , a ) ; break ; } } else { if ( global_i == global_c ) { global_i = 0 ; global_h = 0 ; } else { sendHandle ( global_i ) ; } } 
(2) FILE: ../../cclient.c LINES:85:13 TOKENS:443:492 DIST:0.0

case 5 : receivingMessage ( b ) ; break ; case 7 : errorMessage ( b ) ; break ; case 9 : terminateClient ( b ) ; break ; case 11 : receiveNumHandles ( b , a ) ; break ; case 12 : global_d ++ ; printHandles ( b , a ) ; if ( global_d == global_a ) { global_e = 0 ; global_d = 0 ; } 
========== 19 ==========
(1) FILE: ../../cclient.c LINES:84:14 TOKENS:440:492 DIST:2.8

case 5 : receivingMessage ( b ) ; break ; case 7 : errorMessage ( b ) ; break ; case 9 : terminateClient ( b ) ; break ; case 11 : receiveNumHandles ( b , a ) ; break ; case 12 : global_d ++ ; printHandles ( b , a ) ; if ( global_d == global_a ) { global_e = 0 ; global_d = 0 ; } 
(2) FILE: ../../server.c LINES:83:16 TOKENS:470:527 DIST:0.0

if ( ! global_h ) { d = * ( uint16_t * ) c ; e = * ( ( uint8_t * ) ( c + 2 ) ) ; switch ( e ) { case 1 : initialPacket ( c , a ) ; break ; case 5 : sendMessage ( c , a ) ; break ; case 4 : broadcastMessage ( c , a ) ; break ; case 8 : exitClient ( c , a ) ; break ; case 10 : listAllHandles ( c , a ) ; break ; } } else { if ( global_i == global_c ) { global_i = 0 ; global_h = 0 ; } else { sendHandle ( global_i ) ; } } 
========== 20 ==========
(1) FILE: ../../cclient.c LINES:86:13 TOKENS:445:494 DIST:3.2

case 5 : receivingMessage ( b ) ; break ; case 7 : errorMessage ( b ) ; break ; case 9 : terminateClient ( b ) ; break ; case 11 : receiveNumHandles ( b , a ) ; break ; case 12 : global_d ++ ; printHandles ( b , a ) ; if ( global_d == global_a ) { global_e = 0 ; global_d = 0 ; } break ; 
(2) FILE: ../../server.c LINES:84:15 TOKENS:473:527 DIST:2.4

if ( ! global_h ) { d = * ( uint16_t * ) c ; e = * ( ( uint8_t * ) ( c + 2 ) ) ; switch ( e ) { case 1 : initialPacket ( c , a ) ; break ; case 5 : sendMessage ( c , a ) ; break ; case 4 : broadcastMessage ( c , a ) ; break ; case 8 : exitClient ( c , a ) ; break ; case 10 : listAllHandles ( c , a ) ; break ; } } else { if ( global_i == global_c ) { global_i = 0 ; global_h = 0 ; } else { sendHandle ( global_i ) ; } } 
========== 21 ==========
(1) FILE: ../../cclient.c LINES:261:10 TOKENS:1633:1706 DIST:0.0

void handleList ( char * a , int b , int c ) { char * d ; uint16_t e = 3 ; uint8_t f = 10 ; int g ; d = malloc ( e ) ; memcpy ( d , & e , 2 ) ; memcpy ( d + 2 , & f , 1 ) ; g = mySend ( b , d , e , 0 ) ; } 
(2) FILE: ../../cclient.c LINES:271:11 TOKENS:1707:1782 DIST:3.3

void exitClient ( char * a , int b , int c ) { uint16_t d ; uint8_t e = 8 ; char * f ; int g ; d = 3 ; f = malloc ( d ) ; memcpy ( f , & d , 2 ) ; memcpy ( f + 2 , & e , 1 ) ; g = mySend ( b , f , d , 0 ) ; } 
========== 22 ==========
(1) FILE: ../../server.c LINES:265:5 TOKENS:1789:1850 DIST:0.0

char * c , * d , * e ; uint16_t f , g , h ; uint8_t i , j = 5 ; f = * ( ( uint16_t * ) a ) ; i = * ( ( uint8_t * ) ( a + 3 ) ) ; d = a + 3 + 1 ; e = a + 3 + 1 + i ; g = f - 3 - 1 - i ; if ( strlen ( e ) == 0 ) { e = malloc ( 1 ) ; memcpy ( e , " " , 1 ) ; g = 1 ; } h = 3 + 1 + i + g ; c = malloc ( h ) ; memcpy ( c , & h , 2 ) ; memcpy ( c + 2 , & j , 1 ) ; memcpy ( c + 3 , & i , 1 ) ; memcpy ( c + 3 + 1 , d , i ) ; memcpy ( c + 3 + 1 + i , e , g ) ; 
(2) FILE: ../../cclient.c LINES:253:5 TOKENS:1542:1599 DIST:3.5

char * d = a , * e , * f , * g ; uint8_t h , i = 4 ; int j , k , l ; d = strtok ( d , " " ) ; h = strlen ( global_c ) ; k = c - 3 ; g = malloc ( k + 1 ) ; while ( ( d = strtok ( ( ( void * ) 0 ) , " " ) ) != ( ( void * ) 0 ) ) { strcat ( g , d ) ; strcat ( g , " " ) ; } strcat ( g , "\0" ) ; e = global_c ; strcat ( g , "\0" ) ; j = 3 + 1 + h + k ; f = malloc ( j ) ; memcpy ( f , & j , 2 ) ; memcpy ( f + 2 , & i , 1 ) ; memcpy ( f + 2 + 1 , & h , 1 ) ; memcpy ( f + 2 + 1 + 1 , e , h ) ; 
========== 23 ==========
(1) FILE: ../../server.c LINES:218:5 TOKENS:1398:1450 DIST:0.0

char * c , * d , * e , * f ; uint8_t g , h , i ; int j = - 1 , k , l , m ; uint16_t n ; g = * ( a + 3 ) ; c = a + 3 + 1 ; h = * ( a + 3 + 1 + g ) ; d = a + 3 + 1 + g + 1 ; e = a + 3 + 1 + g + 1 + h ; m = * ( uint16_t * ) a - 3 - 1 - g - 1 - h ; if ( strlen ( e ) == 0 ) { e = malloc ( 1 ) ; memcpy ( e , " " , 1 ) ; m = 1 ; } f = malloc ( g ) ; memcpy ( f , c , g ) ; j = compareClients ( c , g ) ; i = 5 ; n = 3 + 1 + h + m ; a = malloc ( n ) ; memcpy ( a , & n , 2 ) ; memcpy ( a + 2 , & i , 1 ) ; memcpy ( a + 2 + 1 , & h , 1 ) ; 
(2) FILE: ../../server.c LINES:263:5 TOKENS:1772:1822 DIST:3.0

char * c , * d , * e ; uint16_t f , g , h ; uint8_t i , j = 5 ; f = * ( ( uint16_t * ) a ) ; i = * ( ( uint8_t * ) ( a + 3 ) ) ; d = a + 3 + 1 ; e = a + 3 + 1 + i ; g = f - 3 - 1 - i ; if ( strlen ( e ) == 0 ) { e = malloc ( 1 ) ; memcpy ( e , " " , 1 ) ; g = 1 ; } h = 3 + 1 + i + g ; c = malloc ( h ) ; memcpy ( c , & h , 2 ) ; memcpy ( c + 2 , & j , 1 ) ; memcpy ( c + 3 , & i , 1 ) ; 
(3) FILE: ../../server.c LINES:283:5 TOKENS:1950:2000 DIST:3.0

char * g ; uint16_t h ; uint8_t i = 7 , j = d ; int k ; h = 3 + 1 + d ; g = malloc ( h ) ; memcpy ( g , & h , 2 ) ; memcpy ( g + 2 , & i , 1 ) ; memcpy ( g + 2 + 1 , & j , 1 ) ; 
========== 24 ==========
(1) FILE: ../../cclient.c LINES:271:9 TOKENS:1715:1768 DIST:3.5

void exitClient ( char * a , int b , int c ) { uint16_t d ; uint8_t e = 8 ; char * f ; int g ; d = 3 ; f = malloc ( d ) ; memcpy ( f , & d , 2 ) ; memcpy ( f + 2 , & e , 1 ) ; g = mySend ( b , f , d , 0 ) ; } 
(2) FILE: ../../server.c LINES:127:9 TOKENS:721:773 DIST:0.0

void listAllHandles ( char * a , int b ) { char * c ; uint16_t d ; uint8_t e = 11 ; int f ; d = 3 + 4 ; c = malloc ( d ) ; memcpy ( c , & d , 2 ) ; memcpy ( c + 2 , & e , 1 ) ; memcpy ( c + 3 , & global_c , 4 ) ; f = mySend ( b , c , d , 0 ) ; free ( c ) ; global_h = 1 ; global_j = b ; } 
========== 25 ==========
(1) FILE: ../../server.c LINES:260:7 TOKENS:1758:1810 DIST:0.0

char * c , * d , * e ; uint16_t f , g , h ; uint8_t i , j = 5 ; f = * ( ( uint16_t * ) a ) ; i = * ( ( uint8_t * ) ( a + 3 ) ) ; d = a + 3 + 1 ; e = a + 3 + 1 + i ; g = f - 3 - 1 - i ; if ( strlen ( e ) == 0 ) { e = malloc ( 1 ) ; memcpy ( e , " " , 1 ) ; g = 1 ; } h = 3 + 1 + i + g ; c = malloc ( h ) ; memcpy ( c , & h , 2 ) ; memcpy ( c + 2 , & j , 1 ) ; 
(2) FILE: ../../server.c LINES:283:5 TOKENS:1950:2000 DIST:3.5

char * g ; uint16_t h ; uint8_t i = 7 , j = d ; int k ; h = 3 + 1 + d ; g = malloc ( h ) ; memcpy ( g , & h , 2 ) ; memcpy ( g + 2 , & i , 1 ) ; memcpy ( g + 2 + 1 , & j , 1 ) ; 
